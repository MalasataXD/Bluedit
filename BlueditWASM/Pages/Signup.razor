@page "/Signup"
@using BlueditWASM.Services.Http
@using global::Shared.DTOs
@inject IAuthService authService
@inject NavigationManager navMgr

<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Please login</h3>
            <div class="field">
                <label>Username:</label>
                <input type="text" @bind="userName"/>
            </div>
            <div class="field">
                <label style="text-align: center">Password:</label>
                <input type="password" @bind="passWord"/>
            </div>
            <div class="field">
                <label style="text-align: center">Repeat password:</label>
                <input type="password" @bind="passWordRepeated"/>
            </div>
            @if (!string.IsNullOrEmpty(errorLabel))
            {
                <div class="field">
                    <label style="color: red">
                        @errorLabel
                    </label>
                </div>
            }
            
            <div class="field">
                <button class="signupbtn" @onclick="RegisterUserAsync">Sign up</button>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>
@code 
{
    private string userName;
    private string passWord;
    private string passWordRepeated;
    private string errorLabel;
    
    private async Task RegisterUserAsync()
    {
        errorLabel = "";
        try
        {
            if (passWord.Equals(passWordRepeated, StringComparison.OrdinalIgnoreCase))
            {
                UserLoginCreationDto dto = new UserLoginCreationDto
                {
                    UserName = userName,
                    PassWord = passWord,
                    Role = "User"
                };
                
                await authService.RegisterAsync(dto);
                await authService.LoginAsync(userName, passWord);
                bool CanLogin = authService.LoginAsync(userName, passWord).IsCompleted;
                Console.WriteLine(CanLogin);

                if (!CanLogin)
                {
                    navMgr.NavigateTo("/");
                }

            }
            else
            {
                errorLabel = "Passwords doesn't match!";
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = "Username already taken";
        }
    }


}